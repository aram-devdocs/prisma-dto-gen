// Auto-generated by prisma-dto-gen (refactored inline)

export interface OrgRecordScalarWhereWithAggregatesInput {
  AND?:
    | {
        AND?: any /* circular reference to OrgRecordScalarWhereWithAggregatesInput */;
        OR?: any /* circular reference to OrgRecordScalarWhereWithAggregatesInput */;
        NOT?: any /* circular reference to OrgRecordScalarWhereWithAggregatesInput */;
        record_id?: any;
        organization_id?: any;
        title?: any;
        details?: any;
        created_on?: any;
        updated_on?: any;
      }
    | any /* circular reference to OrgRecordScalarWhereWithAggregatesInput */;
  OR?: any /* circular reference to OrgRecordScalarWhereWithAggregatesInput */;
  NOT?: any /* circular reference to OrgRecordScalarWhereWithAggregatesInput */;
  record_id?: any;
  organization_id?: any;
  title?: any;
  details?: any;
  created_on?: any;
  updated_on?: any;
}

import { z } from "zod";

export const OrgRecordScalarWhereWithAggregatesInputSchema = z.object({
  AND: z.any().optional(),
  OR: z.array(z.any()).optional(),
  NOT: z.any().optional(),
  record_id: z.any().optional(),
  organization_id: z.any().optional(),
  title: z.any().optional(),
  details: z.any().nullable().optional(),
  created_on: z.any().optional(),
  updated_on: z.any().nullable().optional(),
});
