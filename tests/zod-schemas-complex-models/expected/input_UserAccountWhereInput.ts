// Auto-generated by prisma-dto-gen (refactored inline)

export interface UserAccountWhereInput {
  AND?:
    | {
        AND?: any /* circular reference to UserAccountWhereInput */;
        OR?: any /* circular reference to UserAccountWhereInput */;
        NOT?: any /* circular reference to UserAccountWhereInput */;
        account_id?: any;
        owner_profile_id?: any;
        name?: any;
        created_at?: any;
        modified_at?: any;
        is_active?: any;
        user_profile?: any;
      }
    | any /* circular reference to UserAccountWhereInput */;
  OR?: any /* circular reference to UserAccountWhereInput */;
  NOT?: any /* circular reference to UserAccountWhereInput */;
  account_id?: any;
  owner_profile_id?: any;
  name?: any;
  created_at?: any;
  modified_at?: any;
  is_active?: any;
  user_profile?: any;
}

import { z } from "zod";

export const UserAccountWhereInputSchema = z.object({
  AND: z.any().optional(),
  OR: z.array(z.any()).optional(),
  NOT: z.any().optional(),
  account_id: z.any().optional(),
  owner_profile_id: z.any().optional(),
  name: z.any().optional(),
  created_at: z.any().optional(),
  modified_at: z.any().nullable().optional(),
  is_active: z.any().optional(),
  user_profile: z.any().optional(),
});
