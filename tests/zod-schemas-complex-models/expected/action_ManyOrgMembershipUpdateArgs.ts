// Auto-generated by prisma-dto-gen (refactored inline)

export interface ManyOrgMembershipUpdateArgs {
  data:
    | {
        membership_id?:
          | string
          | {
              set?: string;
            };
        joined_on?:
          | Date
          | {
              set?: Date;
            };
        is_active?: any;
      }
    | {
        membership_id?: string | any /* circular reference to StringFieldUpdateOperationsInput */;
        organization_id?: string | any /* circular reference to StringFieldUpdateOperationsInput */;
        profile_id?: string | any /* circular reference to StringFieldUpdateOperationsInput */;
        joined_on?: Date | any /* circular reference to DateTimeFieldUpdateOperationsInput */;
        is_active?: any;
      };
  where?: {
    AND?: any /* circular reference to OrgMembershipWhereInput */;
    OR?: any /* circular reference to OrgMembershipWhereInput */;
    NOT?: any /* circular reference to OrgMembershipWhereInput */;
    membership_id?:
      | {
          equals?: any;
          in?: any;
          notIn?: any;
          lt?: any;
          lte?: any;
          gt?: any;
          gte?: any;
          contains?: any;
          startsWith?: any;
          endsWith?: any;
          mode?: any;
          not?:
            | string
            | {
                equals?: any;
                in?: any;
                notIn?: any;
                lt?: any;
                lte?: any;
                gt?: any;
                gte?: any;
                contains?: any;
                startsWith?: any;
                endsWith?: any;
                not?: string | any /* circular reference to NestedStringFilter */;
              };
        }
      | string;
    organization_id?: any /* circular reference to StringFilter */ | string;
    profile_id?: any /* circular reference to StringFilter */ | string;
    joined_on?:
      | {
          equals?: any;
          in?: any;
          notIn?: any;
          lt?: any;
          lte?: any;
          gt?: any;
          gte?: any;
          not?:
            | Date
            | {
                equals?: any;
                in?: any;
                notIn?: any;
                lt?: any;
                lte?: any;
                gt?: any;
                gte?: any;
                not?: Date | any /* circular reference to NestedDateTimeFilter */;
              };
        }
      | Date;
    is_active?: any;
    organization?:
      | {
          is?: {
            AND?: any /* circular reference to OrganizationWhereInput */;
            OR?: any /* circular reference to OrganizationWhereInput */;
            NOT?: any /* circular reference to OrganizationWhereInput */;
            organization_id?: any /* circular reference to StringFilter */ | string;
            name?: any /* circular reference to StringFilter */ | string;
            description?: any;
            created_on?: any /* circular reference to DateTimeFilter */ | Date;
            updated_on?: any;
            is_active?: any;
            events?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                org_event_id?: any /* max depth reached */;
                organization_id?: any /* max depth reached */;
                event_name?: any /* max depth reached */;
                start_time?: any /* max depth reached */;
                end_time?: any /* max depth reached */;
                location?: any /* max depth reached */;
                organization?: any /* max depth reached */;
              };
              some?: any /* circular reference to OrgEventWhereInput */;
              none?: any /* circular reference to OrgEventWhereInput */;
            };
            members?: {
              every?: any /* circular reference to OrgMembershipWhereInput */;
              some?: any /* circular reference to OrgMembershipWhereInput */;
              none?: any /* circular reference to OrgMembershipWhereInput */;
            };
            records?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                record_id?: any /* max depth reached */;
                organization_id?: any /* max depth reached */;
                title?: any /* max depth reached */;
                details?: any /* max depth reached */;
                created_on?: any /* max depth reached */;
                updated_on?: any /* max depth reached */;
                organization?: any /* max depth reached */;
              };
              some?: any /* circular reference to OrgRecordWhereInput */;
              none?: any /* circular reference to OrgRecordWhereInput */;
            };
          };
          isNot?: any /* circular reference to OrganizationWhereInput */;
        }
      | any /* circular reference to OrganizationWhereInput */;
    user_profile?:
      | {
          is?: {
            AND?: any /* circular reference to UserProfileWhereInput */;
            OR?: any /* circular reference to UserProfileWhereInput */;
            NOT?: any /* circular reference to UserProfileWhereInput */;
            profile_id?: any /* circular reference to StringFilter */ | string;
            created_timestamp?: any /* circular reference to DateTimeFilter */ | Date;
            updated_timestamp?: any;
            deactivated?: any;
            full_name?: any /* circular reference to StringFilter */ | string;
            email_address?: any;
            phone_number?: any;
            password_hash?: any;
            account_level?: any;
            created_by_id?: any;
            user_documents?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                document_id?: any /* max depth reached */;
                owner_profile_id?: any /* max depth reached */;
                title?: any /* max depth reached */;
                content?: any /* max depth reached */;
                status?: any /* max depth reached */;
                created_at?: any /* max depth reached */;
                updated_at?: any /* max depth reached */;
                archived?: any /* max depth reached */;
                user_profile?: any /* max depth reached */;
                comments?: any /* max depth reached */;
              };
              some?: any /* circular reference to UserDocumentWhereInput */;
              none?: any /* circular reference to UserDocumentWhereInput */;
            };
            user_notifications?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                notification_id?: any /* max depth reached */;
                recipient_profile_id?: any /* max depth reached */;
                sent_timestamp?: any /* max depth reached */;
                read_timestamp?: any /* max depth reached */;
                message?: any /* max depth reached */;
                notification_refs?: any /* max depth reached */;
                user_profile?: any /* max depth reached */;
              };
              some?: any /* circular reference to UserNotificationWhereInput */;
              none?: any /* circular reference to UserNotificationWhereInput */;
            };
            user_accounts?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                account_id?: any /* max depth reached */;
                owner_profile_id?: any /* max depth reached */;
                name?: any /* max depth reached */;
                created_at?: any /* max depth reached */;
                modified_at?: any /* max depth reached */;
                is_active?: any /* max depth reached */;
                user_profile?: any /* max depth reached */;
              };
              some?: any /* circular reference to UserAccountWhereInput */;
              none?: any /* circular reference to UserAccountWhereInput */;
            };
            user_two_step_codes?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                verification_id?: any /* max depth reached */;
                profile_id?: any /* max depth reached */;
                code?: any /* max depth reached */;
                is_verified?: any /* max depth reached */;
                created_at?: any /* max depth reached */;
                verification_type?: any /* max depth reached */;
                user_profile?: any /* max depth reached */;
              };
              some?: any /* circular reference to TwoStepVerificationWhereInput */;
              none?: any /* circular reference to TwoStepVerificationWhereInput */;
            };
            user_comments?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                comment_id?: any /* max depth reached */;
                document_id?: any /* max depth reached */;
                commenter_id?: any /* max depth reached */;
                text?: any /* max depth reached */;
                created_at?: any /* max depth reached */;
                edited_at?: any /* max depth reached */;
                is_deleted?: any /* max depth reached */;
                user_document?: any /* max depth reached */;
                user_profile?: any /* max depth reached */;
              };
              some?: any /* circular reference to UserCommentWhereInput */;
              none?: any /* circular reference to UserCommentWhereInput */;
            };
            created_by_profile?: any;
            profiles_created?: {
              every?: any /* circular reference to UserProfileWhereInput */;
              some?: any /* circular reference to UserProfileWhereInput */;
              none?: any /* circular reference to UserProfileWhereInput */;
            };
            threads_as_primary_participant?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                thread_id?: any /* max depth reached */;
                primary_participant?: any /* max depth reached */;
                secondary_participant?: any /* max depth reached */;
                created_on?: any /* max depth reached */;
                closed_on?: any /* max depth reached */;
                is_flagged?: any /* max depth reached */;
                flagged_reason?: any /* max depth reached */;
                participant_one?: any /* max depth reached */;
                participant_two?: any /* max depth reached */;
                messages?: any /* max depth reached */;
              };
              some?: any /* circular reference to DiscussionThreadWhereInput */;
              none?: any /* circular reference to DiscussionThreadWhereInput */;
            };
            threads_as_secondary_participant?: any /* circular reference to DiscussionThreadListRelationFilter */;
            sent_messages?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                message_id?: any /* max depth reached */;
                thread_id?: any /* max depth reached */;
                sender_id?: any /* max depth reached */;
                content?: any /* max depth reached */;
                sent_at?: any /* max depth reached */;
                updated_at?: any /* max depth reached */;
                is_archived?: any /* max depth reached */;
                discussion_thread?: any /* max depth reached */;
                sender?: any /* max depth reached */;
              };
              some?: any /* circular reference to ThreadMessageWhereInput */;
              none?: any /* circular reference to ThreadMessageWhereInput */;
            };
            org_memberships?: any /* circular reference to OrgMembershipListRelationFilter */;
            payments?: {
              every?: {
                AND?: any /* max depth reached */;
                OR?: any /* max depth reached */;
                NOT?: any /* max depth reached */;
                payment_id?: any /* max depth reached */;
                payer_id?: any /* max depth reached */;
                amount?: any /* max depth reached */;
                paid_at?: any /* max depth reached */;
                status?: any /* max depth reached */;
                reference_note?: any /* max depth reached */;
                payer?: any /* max depth reached */;
              };
              some?: any /* circular reference to PaymentWhereInput */;
              none?: any /* circular reference to PaymentWhereInput */;
            };
          };
          isNot?: any /* circular reference to UserProfileWhereInput */;
        }
      | any /* circular reference to UserProfileWhereInput */;
  };
}

import { z } from "zod";

export const ManyOrgMembershipUpdateArgsSchema = z.object({
  data: z.any(),
  where: z.any().optional(),
});
