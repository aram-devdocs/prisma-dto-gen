// Auto-generated by prisma-dto-gen (refactored inline)

export interface OrgEventWhereInput {
  AND?:
    | {
        AND?: any /* circular reference to OrgEventWhereInput */;
        OR?: any /* circular reference to OrgEventWhereInput */;
        NOT?: any /* circular reference to OrgEventWhereInput */;
        org_event_id?: any;
        organization_id?: any;
        event_name?: any;
        start_time?: any;
        end_time?: any;
        location?: any;
        organization?: any;
      }
    | any /* circular reference to OrgEventWhereInput */;
  OR?: any /* circular reference to OrgEventWhereInput */;
  NOT?: any /* circular reference to OrgEventWhereInput */;
  org_event_id?: any;
  organization_id?: any;
  event_name?: any;
  start_time?: any;
  end_time?: any;
  location?: any;
  organization?: any;
}

import { z } from "zod";

export const OrgEventWhereInputSchema = z.object({
  AND: z.any().optional(),
  OR: z.array(z.any()).optional(),
  NOT: z.any().optional(),
  org_event_id: z.any().optional(),
  organization_id: z.any().optional(),
  event_name: z.any().optional(),
  start_time: z.any().optional(),
  end_time: z.any().nullable().optional(),
  location: z.any().nullable().optional(),
  organization: z.any().optional(),
});
