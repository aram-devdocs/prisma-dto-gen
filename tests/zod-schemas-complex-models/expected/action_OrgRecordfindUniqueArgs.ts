// Auto-generated by prisma-dto-gen (refactored inline)

export interface OrgRecordFindUniqueArgs {
  where: {
    record_id?: string;
    AND?:
      | {
          AND?: any /* circular reference to OrgRecordWhereInput */;
          OR?: any /* circular reference to OrgRecordWhereInput */;
          NOT?: any /* circular reference to OrgRecordWhereInput */;
          record_id?:
            | {
                equals?: any;
                in?: any;
                notIn?: any;
                lt?: any;
                lte?: any;
                gt?: any;
                gte?: any;
                contains?: any;
                startsWith?: any;
                endsWith?: any;
                mode?: any;
                not?:
                  | string
                  | {
                      equals?: any;
                      in?: any;
                      notIn?: any;
                      lt?: any;
                      lte?: any;
                      gt?: any;
                      gte?: any;
                      contains?: any;
                      startsWith?: any;
                      endsWith?: any;
                      not?: string | any /* circular reference to NestedStringFilter */;
                    };
              }
            | string;
          organization_id?: any /* circular reference to StringFilter */ | string;
          title?: any /* circular reference to StringFilter */ | string;
          details?: any;
          created_on?:
            | {
                equals?: any;
                in?: any;
                notIn?: any;
                lt?: any;
                lte?: any;
                gt?: any;
                gte?: any;
                not?:
                  | Date
                  | {
                      equals?: any;
                      in?: any;
                      notIn?: any;
                      lt?: any;
                      lte?: any;
                      gt?: any;
                      gte?: any;
                      not?: Date | any /* circular reference to NestedDateTimeFilter */;
                    };
              }
            | Date;
          updated_on?: any;
          organization?:
            | {
                is?: {
                  AND?: any /* circular reference to OrganizationWhereInput */;
                  OR?: any /* circular reference to OrganizationWhereInput */;
                  NOT?: any /* circular reference to OrganizationWhereInput */;
                  organization_id?: any /* circular reference to StringFilter */ | string;
                  name?: any /* circular reference to StringFilter */ | string;
                  description?: any;
                  created_on?: any /* circular reference to DateTimeFilter */ | Date;
                  updated_on?: any;
                  is_active?: any;
                  events?: {
                    every?: any /* max depth reached */;
                    some?: any /* max depth reached */;
                    none?: any /* max depth reached */;
                  };
                  members?: {
                    every?: any /* max depth reached */;
                    some?: any /* max depth reached */;
                    none?: any /* max depth reached */;
                  };
                  records?: {
                    every?: any /* max depth reached */;
                    some?: any /* max depth reached */;
                    none?: any /* max depth reached */;
                  };
                };
                isNot?: any /* circular reference to OrganizationWhereInput */;
              }
            | any /* circular reference to OrganizationWhereInput */;
        }
      | any /* circular reference to OrgRecordWhereInput */;
    OR?: any /* circular reference to OrgRecordWhereInput */;
    NOT?: any /* circular reference to OrgRecordWhereInput */;
    organization_id?: any /* circular reference to StringFilter */ | string;
    title?: any /* circular reference to StringFilter */ | string;
    details?: any;
    created_on?: any /* circular reference to DateTimeFilter */ | Date;
    updated_on?: any;
    organization?:
      | any /* circular reference to OrganizationRelationFilter */
      | any /* circular reference to OrganizationWhereInput */;
  };
}

import { z } from "zod";

export const OrgRecordFindUniqueArgsSchema = z.object({
  where: z.any(),
});
