// Auto-generated by prisma-dto-gen (refactored inline)

export interface ChangeLogFindManyArgs {
  where?: {
    AND?: any /* circular reference to ChangeLogWhereInput */;
    OR?: any /* circular reference to ChangeLogWhereInput */;
    NOT?: any /* circular reference to ChangeLogWhereInput */;
    change_log_id?:
      | {
          equals?: any;
          in?: any;
          notIn?: any;
          lt?: any;
          lte?: any;
          gt?: any;
          gte?: any;
          contains?: any;
          startsWith?: any;
          endsWith?: any;
          mode?: any;
          not?:
            | string
            | {
                equals?: any;
                in?: any;
                notIn?: any;
                lt?: any;
                lte?: any;
                gt?: any;
                gte?: any;
                contains?: any;
                startsWith?: any;
                endsWith?: any;
                not?: string | any /* circular reference to NestedStringFilter */;
              };
        }
      | string;
    applied_at?:
      | {
          equals?: any;
          in?: any;
          notIn?: any;
          lt?: any;
          lte?: any;
          gt?: any;
          gte?: any;
          not?:
            | Date
            | {
                equals?: any;
                in?: any;
                notIn?: any;
                lt?: any;
                lte?: any;
                gt?: any;
                gte?: any;
                not?: Date | any /* circular reference to NestedDateTimeFilter */;
              };
        }
      | Date;
    description?: any /* circular reference to StringFilter */ | string;
  };
  orderBy?:
    | {
        change_log_id?: any;
        applied_at?: any;
        description?: any;
      }[]
    | any /* circular reference to ChangeLogOrderByWithRelationInput */;
  cursor?: {
    change_log_id?: string;
    AND?: any /* circular reference to ChangeLogWhereInput */;
    OR?: any /* circular reference to ChangeLogWhereInput */;
    NOT?: any /* circular reference to ChangeLogWhereInput */;
    applied_at?: any /* circular reference to DateTimeFilter */ | Date;
    description?: any /* circular reference to StringFilter */ | string;
  };
  take?: number;
  skip?: number;
  distinct?: any;
}

import { z } from "zod";

export const ChangeLogFindManyArgsSchema = z.object({
  where: z.any().optional(),
  orderBy: z.array(z.any()).optional(),
  cursor: z.any().optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.any().optional(),
});
