// Auto-generated by prisma-dto-gen (refactored inline)

export interface UserScalarWhereWithAggregatesInput {
  AND?:
    | {
        AND?: any /* circular reference to UserScalarWhereWithAggregatesInput */;
        OR?: any /* circular reference to UserScalarWhereWithAggregatesInput */;
        NOT?: any /* circular reference to UserScalarWhereWithAggregatesInput */;
        id?: any;
        name?: any;
        email?: any;
        age?: any;
        isFoo?: any;
        password?: any;
        createdAt?: any;
        updatedAt?: any;
      }
    | any /* circular reference to UserScalarWhereWithAggregatesInput */;
  OR?: any /* circular reference to UserScalarWhereWithAggregatesInput */;
  NOT?: any /* circular reference to UserScalarWhereWithAggregatesInput */;
  id?: any;
  name?: any;
  email?: any;
  age?: any;
  isFoo?: any;
  password?: any;
  createdAt?: any;
  updatedAt?: any;
}

import { z } from "zod";

export const UserScalarWhereWithAggregatesInputSchema = z.object({
  AND: z.any().optional(),
  OR: z.array(z.any()).optional(),
  NOT: z.any().optional(),
  id: z.any().optional(),
  name: z.any().optional(),
  email: z.any().optional(),
  age: z.any().nullable().optional(),
  isFoo: z.any().optional(),
  password: z.any().optional(),
  createdAt: z.any().optional(),
  updatedAt: z.any().optional(),
});
